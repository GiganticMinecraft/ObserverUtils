plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
    id 'com.dipien.semantic-version' version '1.0.0'
    id 'com.mooltiverse.oss.nyx' version '1.0.1'
}

group = 'click.seichi'
version = '0.4.1'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'sk89q'
        url = 'https://maven.enginehub.org/repo/'
    }
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

dependencies {
    implementation 'org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT'
    implementation 'com.sk89q.worldguard:worldguard-legacy:6.2'
    implementation 'com.sk89q.worldedit:worldedit-bukkit:6.1.5'
    implementation 'com.sk89q.worldedit:worldedit-core:6.1'
    embed 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    embed 'com.google.code.gson:gson:2.9.0'
    embed 'com.squareup.okhttp3:okhttp:4.10.0'
    embed 'com.michael-bull.kotlin-result:kotlin-result:1.1.16'
    testImplementation 'io.kotest:kotest-runner-junit5-jvm:5.3.2'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
}

test {
    useJUnitPlatform()
}

nyx {
    preset = 'extended'
    releasePrefix = 'v'
}
