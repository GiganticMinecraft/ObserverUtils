plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
}

group = 'click.seichi'
version = '0.1.0'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'worldguard'
        url = 'https://maven.enginehub.org/repo/'
    }
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

dependencies {
    implementation 'org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT'
    implementation 'com.sk89q.worldguard:worldguard-legacy:6.2'
    implementation 'com.github.shynixn.mccoroutine:mccoroutine-bukkit-api:1.5.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-core:1.3.2'
    embed 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'
    embed 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    embed 'org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.6.0'
    embed 'com.github.kittinunf.fuel:fuel:2.3.1'
    embed 'io.arrow-kt:arrow-core:1.0.1'
    embed 'com.github.shynixn.mccoroutine:mccoroutine-bukkit-core:1.5.0'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
}
